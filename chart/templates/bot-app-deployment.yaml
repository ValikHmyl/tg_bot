apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  creationTimestamp: null
  labels:
    app-name: {{ .Values.bot_app.name }}
  name: {{ .Values.bot_app.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app-name: {{ .Values.bot_app.name }}
  strategy: {}
  template:
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        tg-bot-tgbot-network: "true"
        app-name: {{ .Values.bot_app.name }}
    spec:
      containers:
        - env:
            - name: BOT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: bot-token
                  key: token
            - name: EXCHANGE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: exchange-api-key
                  key: exchange-api-key
            - name: JDBC_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: password
            - name: JDBC_DATABASE_URL
              value: jdbc:postgresql://postgres:5432/khmyl_app
            - name: JDBC_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: username
          image: {{ .Values.bot_app.image }}:{{.Values.bot_app.version}}
          imagePullPolicy: IfNotPresent
#          imagePullPolicy: Never
          name: {{ .Values.bot_app.name }}
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            successThreshold: 2
            failureThreshold: 2
          ports:
            - containerPort: 8080
          resources: {}
      restartPolicy: Always
status: {}
